{{>layout/header}}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<style type="text/css">
    .notice-title {
        text-align: center;
        margin: 20px 0;
    }
    .notice-list-container {
        width: 80%;
        height: 60vh;
        border-radius: 10px;
        box-shadow: 2px 2px 5px #dee2e6;
        padding: 20px; /* 여백 추가 */
    }
    .notice-table {
        width: 100%;
    }
    .notice-box {
        border: 1px solid #dee2e6;
        border-radius: 10px;
        background: #f8f9fa;
        transition: background 0.3s; /* 호버 효과를 위한 애니메이션 */
    }
    .notice-box:hover {
        background: #e9ecef; /* 호버 시 배경 색상 변경 */
    }
    .pagination {
        justify-content: center;
        margin: 20px 0;
    }
</style>

<div class="notice-title">
    <h3>다모아의 새로운 소식들</h3>
    <h5>신규 기능, 이벤트, 점검 일정 등 다양한 이야기를 확인해주세요.</h5>
</div>

<div class="notice-list-container">
    <table class="table table-bordered notice-table">
        <thead>
        <tr>
            <th>제목</th>
            <th>작성일</th>
        </tr>
        </thead>
        <tbody>
        {{#noticeList}}
            <tr class="notice-box" onclick="location.href='/notice/detail/{{id}}'">
                <td>{{title}}</td>
                <td>{{createdAt}}</td>
            </tr>
        {{/noticeList}}
        </tbody>
    </table>

    <!-- 페이지네이션 -->
    <nav aria-label="Page navigation">
        <ul class="pagination" id="paginationContainer">
            {{#prevPage}} <!-- 이전 페이지가 있을 때 -->
                <li class="page-item">
                    <a class="page-link" href="?page={{prevPage}}" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            {{/prevPage}}

            <!-- 페이지 번호 표시 -->
            <script>
                const totalPages = {{totalPages}}; // 전체 페이지 수
                const currentPage = {{currentPage}}; // 현재 페이지 (0-based)
                const paginationContainer = document.getElementById("paginationContainer");

                // 페이지 번호 링크 생성
                for (let i = 0; i < totalPages; i++) {
                    const pageItem = document.createElement("li");
                    pageItem.className = "page-item" + (i === currentPage ? " active" : ""); // 현재 페이지에 active 클래스 추가
                    pageItem.innerHTML = `<a class="page-link" href="?page=${i}">${i + 1}</a>`; // 1-based로 표시
                    paginationContainer.appendChild(pageItem);
                }

                // 다음 페이지 링크
                {{#nextPage}}
                    const nextPageItem = document.createElement("li");
                    nextPageItem.className = "page-item";
                    nextPageItem.innerHTML = `<a class="page-link" href="?page={{nextPage}}">다음</a>`;
                    paginationContainer.appendChild(nextPageItem);
                {{/nextPage}}

            </script>
        </ul>
    </nav>
</div>


{{>layout/footer}}
