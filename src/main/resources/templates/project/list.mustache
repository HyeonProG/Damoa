{{>layout/header}}
<style type="text/css">
    .body {
        background: #DEDEDE;
    }
    .job-kind {
        padding: 10px;
        cursor: pointer; /* 마우스 포인터 커서로 변경 */
    }
    .job-kind.selected {
        background-color: #a0a0a0; /* 선택된 배경색 */
    }
    .project-container {
        display: flex;
        flex-direction: column;
        width: 80%; /* 중앙 정렬을 위해 너비 설정 */
        margin: 20px auto; /* 자동 여백으로 중앙 정렬 */
    }
    .project-list-item {
        width: 80%;
        padding: 15px;
        margin: 10px 0;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: background 0.2s; /* 마우스 오버 시 애니메이션 */
        display: flex; /* Flexbox 사용 */
        flex-direction: column; /* 세로 방향으로 배치 */
    }
    .project-list-item:hover {
        background: #f8f9fa; /* 호버 시 배경색 변경 */
    }
    .project-info {
        margin-bottom: 10px; /* 정보 간 간격 설정 */
    }
    .project-job {
        font-weight: bold; /* 직무 강조 */
    }
    .page-nation {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }
    .page-nation button {
        margin: 0 5px;
    }
</style>

<h3>프로젝트 목록 ({{totalProjectNum}})</h3>
<p>프로젝트를 찾고 매칭해보세요</p>

<div class="search-div">
    <div class="minor-class">
        <select name="workingType" onchange="sendData()">
            <option value="all" selected disabled hidden>근무 방식</option>
            <option value="0">전체</option>
            <option value="1">원격 근무</option>
            <option value="2">상주 근무</option>
            <option value="3">원격 상주 모두</option>
        </select>
        <select name="workingAddress" onchange="sendData()">
            <option selected disabled hidden>직무</option>
            <option value="0">전체</option>
            <option value="1">풀스택</option>
            <option value="2">프론트엔드</option>
            <option value="3">백엔드</option>
            <option value="4">서버</option>
            <option value="5">데브옵스</option>
            <option value="6">데이터</option>
            <option value="7">AI</option>
            <option value="8">임베디드</option>
            <option value="8">미들웨어</option>
            <option value="9">웹 퍼블리싱</option>
            <option value="10">안드로이드</option>
            <option value="11">IOS</option>
        </select>
        <select name="projectStatus" onchange="sendData()">
            <option selected disabled hidden>진행 상황</option>
            <option value="0">전체</option>
            <option value="1">기획단계</option>
            <option value="2">기획서가 준비되어 있음</option>
            <option value="3">이미 프로젝트가 진행 중임</option>
        </select>
    </div>
    <div>
        <button>조회순</button>
        <button>최신순</button>
    </div>
</div>
<div class="project-container">
    {{#projectListForPaging}}
        <div class="project-list-item" onclick="location.href='/project/detail/{{id}}'">
            <h4>{{projectName}}</h4>
            <h5 class="project-job">{{job}}</h5>
            <p>{{projectStart}}</p>
            <button class="btn btn-primary">자세히 보기</button>
        </div>
    {{/projectListForPaging}}
</div>

<div class="page-nation" id="page-nation">
    <button id="before" class="btn btn-light" onclick="beforePage(currentPage - 1)">이전</button>
    {{#totalPageNum }}
        <button class="btn btn-light" onclick="goToPage(this)" value="{{this}}">{{this}}</button>
    {{/totalPageNum}}
    <button id="next" class="btn btn-light" onclick="beforePage(currentPage + 1)">다음</button>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
    // sendData 함수를 여기서 정의
    window.sendData = function() {
        var workingType = $('select[name="workingType"]').val();
        var workingAddress = $('select[name="workingAddress"]').val();
        var projectStatus = $('select[name="projectStatus"]').val();
        var projectStatus = $('select[name="projectStatus"]').val();

        console.log(workingType);
        console.log(workingAddress);
        console.log(projectStatus);
        console.log('허허허');

        $.ajax({
            url: '/project/send-fetched-data',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                'workType': workingType,
                'address': workingAddress,
                'progress': projectStatus,
            }),
            success: function(data) {
                updateProjectList(data);
            },
        });
    };

    // select 요소의 change 이벤트에 sendData 함수 연결
    $('.minor-class select').change(sendData);
});

    function updateProjectList(projects) {
    var projectContainer = $('.project-container');
    projectContainer.empty(); // 기존 내용 비우기

    if (projects.length === 0) {
        projectContainer.append('<p>해당하는 프로젝트가 없습니다.</p>'); // 프로젝트가 없을 경우 메시지 추가
        return;
    }

    $.each(projects, function(index, project) {
        var projectItem = $(`
            <div class="project-list-item" onclick="location.href='/project/detail/${project.id}'">
                <h4>${project.projectName}</h4>
                <h5 class="project-job">${project.job}</h5>
                <p>${project.projectStart}</p>
                <button class="btn btn-primary">자세히 보기</button>
            </div>
        `);
        projectContainer.append(projectItem);
    });
}


    window.showJobContainer=function(){
        $('.job-kind-container').toggle();
    }

</script>

{{>layout/footer}}
