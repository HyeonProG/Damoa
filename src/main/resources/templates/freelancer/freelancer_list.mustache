{{> layout/header}}


<!-- 스타일 추가 -->
<style>
    .main-container {
        display: flex;
        justify-content: space-between;
        gap: 20px;
    }

    .content {
        flex: 1;
        padding: 20px;
    }

    .freelancer-cards-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        margin-top: 20px;
    }

    .freelancer-card {
        display: flex;
        width: 300px;
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        transition: transform 0.2s;
        cursor: pointer;
        flex-direction: column;
        justify-content: center;
    }

    .freelancer-card:hover {
        transform: translateY(-5px);
    }

    .freelancer-card h2 {
        font-size: 1.5em;
        margin-bottom: 10px;
    }

    .freelancer-card p {
        margin: 5px 0;
        font-size: 0.9em;
        color: #555;
    }

    .freelancer-card .card-label {
        font-weight: bold;
        color: #333;
    }

    .freelancer-info-card {
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #fff;
        margin-top: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .freelancer-info-card p {
        margin: 5px 0;
        font-size: 0.9em;
        color: #555;
    }

    .pagination {
        list-style: none;
        display: flex;
        justify-content: center;
        padding: 0;
    }

    .pagination .page-item {
        margin: 0 5px;
    }

    .pagination .page-link {
        padding: 8px 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        text-decoration: none;
        color: #007bff;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        color: #fff;
    }

    .pagination .page-item.disabled .page-link {
        color: #ccc;
    }
    .salary-card p {
    height: 100%; /* p 태그 높이를 부모의 100%로 설정 */
    display: flex; /* p 태그 안의 내용을 중앙 정렬하기 위한 flexbox 사용 */
    justify-content: center; /* 수평 가운데 정렬 */
    align-items: center; /* 수직 가운데 정렬 */
    margin: 0; /* 기본 여백 제거 */
    font-size: 1em; /* 텍스트 크기 설정 */
    color: #555;
    }

</style>

<div class="main-container">

    <!-- 프리랜서 목록 섹션 -->
    <div class="content">
        <h1>프리랜서 목록</h1>
        <div id="freelancer-list" class="freelancer-cards-container">
            <!-- JavaScript로 프리랜서 카드 목록이 여기에 추가됩니다 -->
        </div>

        <div id="paginationContainer"></div> <!-- 페이지네이션을 위한 컨테이너 -->
    </div>
</div>

<script>
    let currentPage = 1; // 현재 페이지
    const pageSize = 5; // 페이지당 항목 수

    // 프리랜서 목록 로드
    function loadFreelancers(page) {
        fetch(`/freelancer/list/data?page=${page}&size=${pageSize}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('네트워크 오류');
                }
                return response.json();
            })
            .then(data => {
                console.log("Data:", data); // 데이터 로그
                const freelancerList = document.getElementById('freelancer-list');
                freelancerList.innerHTML = ''; // 기존 목록 초기화

                if (Array.isArray(data.freelancers)) {
                    const randomIndex = Math.floor(Math.random() * data.freelancers.length); // 랜덤 인덱스 생성

                    data.freelancers.forEach((freelancer, index) => {
                        const card = document.createElement('div');
                        card.className = 'freelancer-card';
                        card.innerHTML = `
                            <h2>${freelancer.username}</h2>
                            <div class="card freelancer-info-card">
                                <p><span class="card-label">직무:</span> ${freelancer.jobPart}</p>
                                <p><span class="card-label">근무 방식:</span> ${freelancer.workingStyle}</p>
                                <p><span class="card-label">기술 스택:</span> ${freelancer.skills || ""}</p>
                                <p><span class="card-label">상세 내용:</span> ${freelancer.detail}</p>
                            </div>
                        `;

                        card.addEventListener('click', () => {
                            window.location.href = `/freelancer/detail/${freelancer.userId}`;
                        });

                        // 무작위로 연봉 카드 추가
                        if (index === randomIndex) {
                            const salaryCard = document.createElement('div');
                            salaryCard.className = 'freelancer-card';
                            salaryCard.innerHTML = `
                                <h4>프리랜서 평균 희망 연봉</h4>
                                <div class="card salary-card">
                                    <p><strong>{{averageSalary}} 만원</strong></p>
                                </div>
                            `;
                            freelancerList.appendChild(salaryCard);
                        }

                        freelancerList.appendChild(card);
                    });
                } else {
                    console.warn("프리랜서가 없습니다.");
                }

                currentPage = data.currentPage;
                renderPagination(data.totalCount, currentPage, pageSize, data.totalPages);
            })
            .catch(error => console.error('Error:', error));
    }

    loadFreelancers(currentPage);

</script>

{{> layout/footer}}
