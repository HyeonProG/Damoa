{{> layout/header}}

<style>
.career-container {
    display: flex;           /* Flexbox를 사용하여 요소들을 나란히 배치 */
    justify-content: space-between;  /* 두 요소 사이에 공간을 균등하게 배치 */
    align-items: center;    /* 수직 중앙 정렬 */
}

.career-container div {
    margin-right: 20px;     /* 요소 간 간격 */
}
</style>

<h2>프리랜서 정보 등록</h2>

<form id="freelancerForm" action="/freelancer/register" method="post" enctype="multipart/form-data">
    {{! 기본 정보 }}
    <div id="basicInfo" class="form-section">
        <h4>기본 정보</h4>
        <div>
            <label for="username">이름</label>
            <input type="text" id="username" name="username" value="{{username}}" placeholder="이름을 입력하세요" required readonly>
        </div>
        <div>
            <label for="email">이메일</label>
            <input type="text" id="email" name="email" value="{{email}}" placeholder="이메일을 입력하세요" required readonly>
        </div>
        <div>
            <label for="phoneNumber">연락처</label>
            <input type="text" id="phoneNumber" name="phoneNumber" value="{{phoneNumber}}" placeholder="연락처를 입력하세요" required readonly>
        </div>
        <div>
            <label for="jobPart">직무 분야</label>
            <select id="jobPartSelect" name="jobPart" required>
                <option value="">직무를 선택하세요</option>
                {{#jobCategories}}
                    <option value="{{.}}">{{.}}</option>
                {{/jobCategories}}
            </select>
            <button type="button" id="addJobPart">추가</button>
        </div>
        <div id="selectedJobParts">
            <h4>선택된 직무 분야</h4>
            <ul id="jobPartList"></ul>
        </div>
    </div>
    
    {{! 근무 방식 }}
    <div id="workingStyle" class="form-section">
        <h4>근무 방식</h4>
        <div>
            <label for="expectedSalary">희망 연봉</label>
            <input type="number" id="expectedSalary" name="expectedSalary" maxlength="6" value="0" min="0" max="100000" step="100" required>
            만
        </div>
        <div>
            <label for="workingStyleInput">근무 방식</label>
            <select id="workingStyleSelect" name="workingStyle" required>
                <option value="">근무 방식을 선택하세요</option>
                {{#workingStyleCategories}}
                    <option value="{{.}}">{{.}}</option>
                {{/workingStyleCategories}}
            </select>
        </div>
        <div>
            <label for="salaryType">급여 방식</label>
            <select id="salaryTypeSelect" name="salaryType" required>
                <option value="">급여 방식을 선택하세요</option>
                {{#salaryTypeCategories}}
                    <option value="{{.}}">{{.}}</option>
                {{/salaryTypeCategories}}
            </select>
        </div>
    </div>

    <div id="experience" class="form-section">
        <h4>경력</h4>
        <div>
            <label for="experienceInput">프리랜서 경험</label>
            <select id="experienceInput" name="experience" required>
                <option value="">경험을 선택하세요</option>
                <option value="있음">있음</option>
                <option value="없음">없음</option>
            </select>
        </div>
        <div class="career-container">
            <div>
                <label for="careerCategory">경력 직무</label>
                <select id="careerCategory" name="careerCategory" required onchange="handleCareerChange()">
                    <option value="">직무를 선택하세요</option>
                    {{#careerCategories}}
                        <option value="{{.}}">{{.}}</option>
                    {{/careerCategories}}
                </select>
            </div>
            <div id="careerYearContainer" style="display: none;">
                <input type="number" id="careerYear" name="careerYear" min="1" max="10" required>
                년
            </div>
            <button type="button" id="addCareer">추가</button>
        </div>
        <div id="selectedCareers">
            <h4>선택된 경력 직무</h4>
            <ul id="careerList"></ul>
        </div>
        <div>
            <label for="skillCategory">기술 스택</label>
                <select id="skillCategory" name="skillCategory" required onchange="handleSkillChange()">
                    <option value="">기술 스택을 선택하세요</option>
                    {{#skillCategories}}
                        <option value="{{.}}">{{.}}</option>
                    {{/skillCategories}}
                </select>
                    <button type="button" id="addSkill">추가</button>
        </div>
        <div id="selectedSkills">
            <h4>선택된 기술 스택</h4>
            <ul id="skillList"></ul>
        </div>                
        </div>
    </div>

    <div id="additionalInfo" class="form-section">
        <h4>추가 정보</h4>
        <div>
            <label for="portfolio">포트폴리오</label>
            <input type="file" id="portfolio" name="portfolio">
        </div>
        <div>
            <label for="detail">상세 소개</label>
            <textarea
             id="detail"
             name="detail"
             placeholder="상세한 자기소개를 입력해주세요."
             style="width: 100%; height: 150px; resize: none;">
            </textarea>
        </div>
        <div>
            <label for="link">링크</label>
            <input type="url" id="link" name="link" placeholder="예: Github, Notion 링크"
             style="width: 100%;">
        </div>
    </div>

    <div>
        <button type="button" id="prevButton" style="display:none;">이전</button>
        <button type="button" id="nextButton">다음</button>
    </div>
    <div>
        <button type="submit" id="submitButton">프리랜서 정보 등록</button>
    </div>
</form>

<script>
    let currentSectionIndex = 0; // 현재 섹션 인덱스
    const sections = document.querySelectorAll('.form-section');

    // 섹션 보이기 함수
    function showSection(index) {
        sections.forEach((section, i) => {
            section.style.display = (i === index) ? 'block' : 'none'; // 현재 섹션만 보이기
        });
        document.getElementById('submitButton').style.display = (index === sections.length - 1) ? 'block' : 'none';
        document.getElementById('nextButton').style.display = (index === sections.length - 1) ? 'none' : 'inline'; // 마지막 섹션일 때는 숨김
        document.getElementById('prevButton').style.display = (index === 0) ? 'none' : 'inline'; // 첫 섹션일 때는 숨김
    }

    // 다음 섹션으로 이동
    document.getElementById('nextButton').addEventListener('click', function() {
        if (currentSectionIndex < sections.length - 1) {
            currentSectionIndex++; // 다음 섹션으로 이동
            showSection(currentSectionIndex);
        }
    });

    // 이전 섹션으로 이동
    document.getElementById('prevButton').addEventListener('click', function() {
        if (currentSectionIndex > 0) {
            currentSectionIndex--; // 이전 섹션으로 이동
            showSection(currentSectionIndex);
        }
    });

    // 직무 추가 버튼 기능
    const addedJobParts = []; // 직무 분야 중복 체크를 위한 배열
    document.getElementById('addJobPart').addEventListener('click', function() {
        const select = document.getElementById('jobPartSelect');
        const selectedValue = select.value;

        // 선택된 값이 비어있지 않은지 확인
        if (selectedValue) {
            // 중복 체크
            if (!addedJobParts.includes(selectedValue)) {
                addedJobParts.push(selectedValue); // 배열에 추가
                const li = document.createElement('li');
                li.textContent = selectedValue;

                const deleteButton = document.createElement('button');
                deleteButton.textContent = '삭제';
                deleteButton.style.marginLeft = '10px';
                deleteButton.onclick = function() {
                    li.remove(); // 리스트에서 항목 삭제
                    addedJobParts.splice(addedJobParts.indexOf(selectedValue), 1); // 배열에서도 삭제
                };

                li.appendChild(deleteButton);
                document.getElementById('jobPartList').appendChild(li);
                select.value = ''; // 선택한 옵션을 초기화
            } else {
                alert("이미 추가된 직무 분야입니다."); // 중복 경고 메시지
            }
        } else {
            alert("직무를 선택해주세요.");
        }
    });

    // 경력 추가 버튼 기능
    const addedCareers = []; // 경력 직무 중복 체크를 위한 배열
    document.getElementById('addCareer').addEventListener('click', function() {
        const careerSelect = document.getElementById('careerCategory');
        const selectedCareer = careerSelect.value;
        const careerYearInput = document.getElementById('careerYear');
        const careerYear = careerYearInput.value;

        // 선택된 값이 비어있지 않은지 확인
        if (selectedCareer && careerYear) {
            // 중복 체크
            if (!addedCareers.some(career => career.name === selectedCareer)) {
                addedCareers.push({ name: selectedCareer, year: careerYear }); // 배열에 추가
                const li = document.createElement('li');
                li.textContent = `${selectedCareer} (${careerYear}년)`;

                const deleteButton = document.createElement('button');
                deleteButton.textContent = '삭제';
                deleteButton.style.marginLeft = '10px';
                deleteButton.onclick = function() {
                    li.remove(); // 리스트에서 항목 삭제
                    addedCareers.splice(addedCareers.indexOf(addedCareers.find(career => career.name === selectedCareer && career.year === careerYear)), 1); // 배열에서도 삭제
                };

                li.appendChild(deleteButton);
                document.getElementById('careerList').appendChild(li);
                careerSelect.value = ''; // 선택한 옵션을 초기화
                careerYearInput.value = ''; // 입력 필드 초기화
                document.getElementById('careerYearContainer').style.display = 'none'; // 연도 입력 숨김
            } else {
                alert("이미 추가된 경력 직무입니다."); // 중복 경고 메시지
            }
        } else {
            alert("경력 직무와 연도를 모두 입력해주세요.");
        }
    });

    // 경력 직무 선택 시 연도 입력 필드 표시
    function handleCareerChange() {
        const careerSelect = document.getElementById('careerCategory');
        const careerYearContainer = document.getElementById('careerYearContainer');
        careerYearContainer.style.display = (careerSelect.value) ? 'block' : 'none'; // 선택된 값에 따라 보이기
    }

    // 기술 스택
    const addedSkills = []; // 기술 스택 중복 체크를 위한 배열
    document.getElementById('addSkill').addEventListener('click', function() {
        const skillSelect = document.getElementById('skillCategory');
        const selectedSkill = skillSelect.value;

        // 선택된 값이 비어있지 않은지 확인
        if (selectedSkill) {
            // 중복 체크
            if (!addedSkills.includes(selectedSkill)) {
                addedSkills.push(selectedSkill); // 배열에 추가
                const li = document.createElement('li');
                li.textContent = selectedSkill;

                const deleteButton = document.createElement('button');
                deleteButton.textContent = '삭제';
                deleteButton.style.marginLeft = '10px';
                deleteButton.onclick = function() {
                    li.remove(); // 리스트에서 항목 삭제
                    addedSkills.splice(addedSkills.indexOf(selectedSkill), 1); // 배열에서도 삭제
                };

                li.appendChild(deleteButton);
                document.getElementById('skillList').appendChild(li);
                skillSelect.value = ''; // 선택한 옵션을 초기화
            } else {
                alert("이미 추가된 기술 스택입니다."); // 중복 경고 메시지
            }
        } else {
            alert("기술 스택을 선택해주세요.");
        }
    });

    document.getElementById('detail').value = '';

    showSection(currentSectionIndex); // 초기 섹션 표시
</script>
{{> layout/footer}}
