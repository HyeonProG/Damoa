create database damoa;

-- 유저 테이블
create table user(
    id int auto_increment primary key,
    email varchar(255) not null unique,
    username varchar(255) not null,
    password varchar(255) not null,
    phone_number varchar(11) not null unique,
    social_type enum ('local', 'kakao', 'google', 'naver') default 'local' not null,
    user_type enum('freelancer', 'company') not null,
    created_at timestamp default current_timestamp
);

-- 프로젝트 등록 테이블
CREATE TABLE project_tb(
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT ,
    job varchar(255) not null,
    skill varchar(255) not null,
    min_years int not null,
    max_years int not null,
    project_start date not null,
    expected_period varchar(255) not null,
    period int not null,
    salary_type varchar(255) not null,
    working_style varchar(255) not null,
    meeting varchar(255) not null,
    address varchar(255) not null,
    worktime varchar(255) not null,
    work_adjust varchar(255) not null,
    vacation varchar(255) not null,
    progress blob not null,
    main_tasks blob not null,
    detail_task blob not null,
    delivered blob not null,
    files blob,
    company text not null,
    manager_name text not null,
    contact text not null,
    email text not null,
    agree int not null
    );

-- 계좌 등록 (유저) 테이블
create table bank_account_req_tb(
    id int not null auto_increment primary key,
    user_id int not null unique key,
    bank_code_id varchar(10) not null,
    account_num varchar(50) not null unique key,
    owner_name varchar(20) not null,
    status int not null default 0,
    created_at timestamp default now()
);

-- 공지사항 테이블
create table notice_tb(
    id int not null auto_increment primary key,
    type int not null, -- 1: 운영정책, 2: 업데이트, 3:점검 안내, 4: 뉴스 및 소개
    title varchar(100) not null,
    content text not null,
    created_at timestamp default now()
);

CREATE TABLE `company_review` (
  `id` int NOT NULL AUTO_INCREMENT,
  `company_id` int DEFAULT NULL, -- 클라이언트 ID
  `freelancer_id` int DEFAULT NULL, -- 프리랜서 ID
  `work_quality_score` int NOT NULL, -- 작업물 퀄리티 평가 (1~5)
  `timeliness_score` int NOT NULL, -- 개발 시간 준수 정도 (1~5)
  `feedback_score` int NOT NULL, -- 개발 의견 반영 정도 (1~5)
  `willingness_score` int NOT NULL, -- 함께 하고 싶은 정도 (1~5)
  `overall_score` int NOT NULL, -- 종합 평점 (1~5)
  `review_date` timestamp DEFAULT CURRENT_TIMESTAMP, -- 리뷰 작성 날짜
  `response_data` TEXT DEFAULT NULL, -- 평가 내용 (TEXT 형식)
  PRIMARY KEY (`id`),
  CONSTRAINT `clients_review_chk_1` CHECK (`work_quality_score` BETWEEN 1 AND 5),
  CONSTRAINT `clients_review_chk_2` CHECK (`timeliness_score` BETWEEN 1 AND 5),
  CONSTRAINT `clients_review_chk_3` CHECK (`feedback_score` BETWEEN 1 AND 5),
  CONSTRAINT `clients_review_chk_4` CHECK (`willingness_score` BETWEEN 1 AND 5),
  CONSTRAINT `clients_review_chk_5` CHECK (`overall_score` BETWEEN 1 AND 5)
);

CREATE TABLE `freelancers_review` (
  `id` int NOT NULL AUTO_INCREMENT,
  `company_id` int, -- 클라이언트 ID
  `freelancer_id` int, -- 프리랜서 ID
  `communication_score` int NOT NULL, -- 커뮤니케이션 점수 (1~5)
  `timeliness_score` int NOT NULL, -- 개발 시간 준수 정도 (1~5)
  `support_score` int NOT NULL, -- 지원 점수 (1~5)
  `willingness_score` int NOT NULL, -- 함께 하고 싶은 정도 (1~5)
  `overall_score` int NOT NULL, -- 종합 평점 (1~5)
  `review_date` timestamp DEFAULT CURRENT_TIMESTAMP, -- 리뷰 작성 날짜
  `response_data` TEXT DEFAULT NULL, -- 평가 내용 (TEXT 형식)
  PRIMARY KEY (`id`),
  CONSTRAINT `freelancers_review_chk_1` CHECK (`communication_score` BETWEEN 1 AND 5),
  CONSTRAINT `freelancers_review_chk_2` CHECK (`timeliness_score` BETWEEN 1 AND 5),
  CONSTRAINT `freelancers_review_chk_3` CHECK (`support_score` BETWEEN 1 AND 5),
  CONSTRAINT `freelancers_review_chk_4` CHECK (`willingness_score` BETWEEN 1 AND 5),
  CONSTRAINT `freelancers_review_chk_5` CHECK (`overall_score` BETWEEN 1 AND 5)
);

CREATE TABLE toss_history_tb (
	id int not null auto_increment primary key,
    payment_key varchar(200),
    user_id int not null,
    order_id varchar(50),
    order_name varchar(50),
    amount varchar(200),
    method varchar(200),
    requested_at varchar(100),
    approved_at varchar(100)
);

CREATE TABLE payment_tb (
    id int not null auto_increment primary key,
    user_id int not null,
    amount int not null,
    payment_method varchar(50),
    payment_item varchar(50),
    oauth_code varchar(500),
    created_at timestamp default current_timestamp
);
